name: Run tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
env:
  MIX_ENV: test
  TEST_DATABASE_URL: postgres://postgres:postgres@localhost:5432/elixir_formula_test
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.1
        env:
          POSTGRES_DB: elixir_formula_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: '1.11.3'
        otp-version: '23.2'

    - name: Restore the deps cache
      uses: actions/cache@v1
      id: deps-cache
      with:
        path: deps
        key: ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-deps-mixlockhash-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-deps-

    - name: Restore the _build cache
      uses: actions/cache@v1
      id: build-cache
      with:
        path: _build
        key: ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-build-mixlockhash-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
        restore-keys: |
          ${{ runner.os }}-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ env.MIX_ENV }}-build-

    - name: Install Mix Dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Compile dependencies
      if: steps.deps-cache.outputs.cache-hit != 'true'
      run: mix deps.compile

    - name: Compile app
      run: mix compile --warnings-as-errors

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run Credo
      run: mix credo --strict

    - name: Run Tests
      run: |
        mix ecto.setup
        mix coveralls
